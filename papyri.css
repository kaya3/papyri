/*
 * Heavily inspired by the Echo theme for Nibbleblog, by Paulo Nunes.
 * https://github.com/syndicatefx/nibbleblog-themes
 */

@import url('fonts/iosevka-papyri-light.css');
@import url('https://fonts.googleapis.com/css?family=Roboto:300,300i,400,500,700');
@import url('https://use.fontawesome.com/releases/v5.0.13/css/all.css');

:root {
	--grey-1: #323334;
	--grey-2: #474849;
	--grey-3: #77787b;
	--grey-4: #a0a2a5;
	--grey-5: #bbbdc2;
	--grey-6: #d6d9de;
	--grey-bg: #e4e7ec;
	--grey-bg-pale: #f6f7f9;
	
	--red: #c82020;
	--red-bg: #f5d5d5;
	--red-bg-pale: #fae9e9;
	--orange: #d07820;
	--orange-bg: #f6e5d5;
	--orange-bg-pale: #faf2e9;
	--yellow: #d5c85b;
	--yellow-bg: #f2eecc;
	--yellow-bg-pale: #faf8ea;
	--green: #50a020;
	--green-bg: #deedd5;
	--green-bg-pale: #eef6e9;
	--blue: #2068b0;
	--blue-bg: #d0e2f6;
	--blue-bg-pale: #e5f0fa;
	--purple: #a05088;
	--purple-bg: #ead9e5;
	--purple-bg-pale: #f6eef3;
	
	--font-family-sans: 'Roboto', 'Lato', 'Open Sans', 'Arial', sans-serif;
	--font-family-serif: 'Times', 'Times New Roman', serif;
	--font-family-mono: 'Iosevka Papyri', 'DejaVu Sans Mono', 'Ubuntu Mono', 'Consolas', 'Lucida Console', monospace;
	--font-size-sans: 16px;
	--font-size-mono: 15px;
	--font-size-mono-listing: 15px;
	--font-weight-light: 300;
	--font-weight-regular: 400;
	--font-weight-bold: 500;
	--font-weight-black: 700;
	--line-height: 1.675em;
	--line-height-mono: 1.4em;
	tab-size: 4;
	--tab-width: 4ch; /* fix for older browsers */
	
	--anchor-size: 42px;
	--anchor-font-size: 24px;
	--padding-left-main: 32px;
	
	--box-border: 1px solid var(--grey-3);
	--padding-panel: 8px 16px;
	--padding-main: 8px 8px 8px var(--padding-left-main);
	--margin-block-vertical: 0.7em;
	
	--animation-time: 0.5s;
}

html, body { margin: 0; padding: 0; min-height: 100%; display: flex; justify-content: stretch; }
body { flex-direction: column; flex-grow: 1; }
body, article table {
	font-family: var(--font-family-sans);
	font-weight: var(--font-weight-light);
	text-rendering: optimizeLegibility;
	color: var(--grey-1);
	word-break: keep-all;
	font-size: var(--font-size-sans);
	line-height: var(--line-height);
}
@media only screen {
	body { background: linear-gradient(to right, var(--grey-bg) 18em, white 18em); }
}
@media only print {
	.anchor-icon { visibility: hidden; }
	body > article { margin-left: auto; margin-right: auto; }
	article h1, article h2, article h3, article h4, article h5, article h6 { position: relative; page-break-after: avoid; break-after: avoid; }
	article h1 + *, article h2 + *, article h3 + *, article h4 + *, article h5 + *, article h6 + * { position: relative; page-break-before: avoid; break-before: avoid; }
	article h1, article h2 { page-break-before: always; break-before: always; margin-top: 0 !important; }
	article h1 + h2 { page-break-before: avoid; break-before: avoid; }
	article p, article .panel, /* article ul, article ol,*/ article li, article table { position: relative; page-break-inside: avoid; break-inside: avoid; }
}

input:not([type="checkbox"]):not([type="radio"]), textarea, button, select, option {
	font-size: 1em;
	font-family: var(--font-family-sans);
	font-weight: var(--font-weight-light);
	outline: none;
}
input[type="radio"], input[type="checkbox"] { margin: 0; margin-right: 0.5em; }
input[type="radio"], input[type="checkbox"], input[type="radio"] + label, input[type="checkbox"] + label, button:not([disabled]) { cursor: pointer; }
input:not([type="checkbox"]):not([type="radio"]), textarea { border: 1px solid var(--grey-5); padding: 2px; }
input:not([type="checkbox"]):not([type="radio"]):focus, textarea:focus, .CodeMirror-focused { border-color: var(--blue) !important; }
textarea, .CodeMirror { box-sizing: border-box; width: 100%; }
textarea { display: block; resize: vertical; line-height: var(--line-height); }
.CodeMirror { border: 1px solid var(--grey-5); height: auto; }
.CodeMirror-selected, .CodeMirror-selectedtext { background-color: var(--grey-bg) !important; }
/*::selection,*/ .CodeMirror-focused .CodeMirror-selected, .CodeMirror-focused .CodeMirror-selectedtext { background-color: var(--blue) !important; color: white !important; }

a { text-decoration: none; color: var(--blue); }
p a, .panel a, .anchor-icon { border-bottom: 1px solid var(--grey-6); }
a:hover { color: var(--blue); border-color: var(--blue); }
b, strong { font-weight: var(--font-weight-bold); }

sub, sup, a.footnote-ref { vertical-align: baseline; font-size: 0.75em; position: relative; }
sub { top: 0.5em; } sup, a.footnote-ref { bottom: 0.5em; }

h1, h2, h3, h4 { margin-top: 1.5em; margin-bottom: 0.5em; }
h1:not(:first-child), h2:not(:first-child) { margin-top: 2.5em; }
h3:not(:first-child), h4:not(:first-child) { margin-top: 1.4em; }
h1 + h2:not(:first-child), h2 + h3:not(:first-child), h3 + h4:not(:first-child) { margin-top: 0; }
h2, h3, h1 > a, h2 > a, h3 > a { color: var(--grey-3); }
h1 { font-size: 2em; line-height: 1.333333em; font-weight: var(--font-weight-bold); color(--var-grey-2); }
h2 { font-size: 2em; line-height: 1.333333em; font-weight: var(--font-weight-regular); }
h3 { font-size: 1.75em; line-height: 1.5em; font-weight: var(--font-weight-light); }
h4 { font-size: 0.875em; line-height: 1em; margin-bottom: 0.25em; font-weight: var(--font-weight-bold); }
h4, h4 > a[href]:not(:hover) { color: var(--grey-1); }

img { display: block; }
article > img, section > img, .panel > img { margin-left: auto; margin-right: auto; }

#header > ul { margin: 0; padding: var(--padding-panel); display: flex; justify-content: flex-end; }
#header > ul > li { display: inline-block; }
#header > ul > li:not(:first-child)::before { display: inline-block; content: '\00a0\2022\00a0'; }

#maincontainer { display: flex; justify-content: stretch; flex-grow: 1; }
#maincontainer > nav, #main { flex-shrink: 0; }
#maincontainer > nav {
	width: 13.375em;
	margin-right: var(--anchor-size);
	padding: var(--padding-panel);
	color: var(--grey-1);
	opacity: 0.5;
	transition-property: opacity;
	transition-duration: var(--animation-time);
}
#maincontainer > nav:hover { opacity: 1; }
#maincontainer > nav a { font-weight: var(--font-weight-regular); color: var(--grey-1); }
#maincontainer > nav a:hover { color: var(--blue); }
#maincontainer > nav > h1 { font-size: 1.25em; margin-top: 0; }
#maincontainer > nav ol.book-outline, #maincontainer > nav ol.book-outline ol { margin: 0; padding: 0; list-style-position: inside; }
#maincontainer > nav ol.book-outline ol { margin-left: 1em; }
li.unnumbered { list-style-type: disc; }

#loginform {
	display: inline-flex;
	flex-direction: column;
	align-items: stretch;
}
#loginform > div { display: flex; }
#loginform > div:not(:last-child) { margin-bottom: 0.5em; }
#loginform > div > * { flex-basis: 0; }
#loginform > div > label { flex-basis: 0; flex-grow: 1; margin-right: 0.5em; white-space: nowrap; }
#loginform button[type="submit"] { padding: 0.25em; flex-grow: 1; }

@media only screen {
	body > article { margin: 2em; margin-left: 20em; }
}
#main { padding: var(--padding-main); flex-grow: 1; }
#main > *, article > *, section > *, .panel:not(pre) > *, .panel { margin: var(--margin-block-vertical) 0; clear: both; }
#main > :first-child, article > :first-child, section > :first-child, .panel > :first-child, #main > .anchor:first-child + *, article > .anchor:first-child + * { margin-top: 0; }
#main > :last-child, article > :last-child, section > :last-child, .panel > :last-child { margin-bottom: 0; }

@media only screen and (max-width: 980px) {
	body { background: var(--grey-bg); }
	body > article { margin: 0em; margin-left: 3.5em; padding: 2em; background-color: white;  }
	#maincontainer > nav { width: auto; margin: 0; padding-left: 5.5em; background-color: var(--grey-bg); }
	#maincontainer > nav li:not(.current) { visibility: hidden; height: 0; }
	#maincontainer { flex-direction: column; }
	#main { margin-left: 3.5em; background-color: white; }
}
@media only screen and (min-width: 1490px) {
	.ide-container { position: relative; }
	.ide-container > .ide-output { position: absolute; top: 0; left: 100%; margin-left: 2em; width: 30em; }
}

article, section { max-width: 40em; }

.tabular-data { margin-left: auto; margin-right: auto; border-collapse: collapse; border: var(--box-border); }
.tabular-data > * > tr:first-child > th, .tabular-data > * > tr:first-child > td { border-top: var(--box-border); padding-top: 3px; }
.tabular-data > * > tr:last-child > th, .tabular-data > * > tr:last-child > td { border-bottom: var(--box-border); padding-bottom: 3px; }
.tabular-data > * > tr > th, .tabular-data > * > tr > td { padding: 1px .5em; }

.panel {
	display: block;
	padding: var(--padding-panel);
	background-color: var(--grey-bg-pale);
	border-width: 0 0 1px 0;
	border-style: solid;
	border-color: var(--grey-bg);
}
.panel.footnote { background-color: var(--yellow-bg-pale); border-color: var(--yellow-bg); }
.panel.warning, .panel.error { background-color: var(--red-bg-pale); border-color: var(--red-bg); }
.panel.correct, .panel.achievement { background-color: var(--green-bg-pale); border-color: var(--green-bg); }
.panel.info, .panel.action, .panel.question { background-color: var(--blue-bg-pale); border-color: var(--blue-bg); }
.panel.footnote { display: none; transition-property: opacity; transition-duration: var(--animation-time); }
.panel.footnote.show { display: block; }

span.fraction { display: inline-flex; flex-direction: column; justify-content: center; vertical-align: middle; }
span.fraction > * { font-size: 0.625em; font-weight: var(--font-weight-regular); line-height: 1em; padding: 2px 1px; }
span.fraction > :last-child { border-top: var(--box-border); margin-top: -1px; }

span.technical-term {
	font-family: var(--font-family-serif);
	font-weight: var(--font-weight-black);
	font-size: 1.2em;
	line-height: 1em;
	letter-spacing: -0.5px;
	color: var(--grey-3);
}

.anchor-root { position: relative; float: left; margin: 0 !important; }
.anchor-icon {
	position: absolute;
	top: 0; right: 100%; margin-right: var(--padding-left-main);
	width: var(--anchor-size); height: var(--anchor-size);
	display: flex; align-items: center; justify-content: center;
	background-color: var(--grey-bg-pale);
	color: var(--grey-5);
}
.anchor-icon > i { font-size: var(--anchor-font-size); }
.anchor.active .anchor-icon { cursor: pointer; }
.anchor.active .anchor-icon:hover, .anchor[href]:hover .anchor-icon, .anchor[href] .anchor-icon:hover {
	color: var(--blue);
	border-color: var(--blue);
}
li .anchor-icon, .panel .anchor-icon { display: none; }

/* TODO? */
.hidden, hr.reveal-after, hr.reveal-after.hidden ~ *, hr.reveal-after-once, hr.reveal-after-once.hidden ~ *, textarea.hidden + .CodeMirror { display: none !important; }

.nocopy, .anchor-icon { -moz-user-select: none; -webkit-user-select: none; -ms-user-select: none; user-select: none; cursor: default; }

article { counter-reset: footnote-ref; }
a.footnote-ref {
	color: var(--blue);
	border: none;
	cursor: pointer;
}
a.footnote-ref::before {
	counter-increment: footnote-ref;
	content: '(' counter(footnote-ref) ')';
}

:not(pre):not(pre > .line) > code, :not(pre):not(pre > .line) > samp, :not(pre):not(pre > .line) > kbd {
}
pre.listing { white-space: pre-wrap; word-break: break-all; }
pre.listing, code, samp, kbd, textarea.code, .CodeMirror {
	font-family: var(--font-family-mono);
	font-weight: var(--font-weight-light);
	line-height: var(--line-height-mono);
	color: black;
}
code, samp, kbd { font-size: var(--font-size-mono); }
pre.listing, pre.listing code, pre.listing samp, pre.listing kbd, textarea.code, .CodeMirror { font-size: var(--font-size-mono-listing); }
kbd:not(.syntax-highlight), pre.listing input.kbd:not(.syntax-highlight) {
	font-style: italic;
	color: var(--green);
}
textarea.code, .CodeMirror, .CodeMirror-scroll { min-height: 10.1em; }
samp.stdout { color: var(--green); }
samp.stderr { color: var(--red); }
pre.listing input.kbd {
	font-family: var(--font-family-mono);
	font-weight: var(--font-weight-light);
	font-size: var(--font-size-mono);
	background-color: white; background-clip: padding-box;
	padding: 0px 2px;
	margin: -1px -3px;
	border: 1px solid white;
	border-radius: 4px;
}
code, samp, kbd {
	background-color: var(--grey-bg-pale);
	border-bottom: 1px solid var(--grey-bg);
	white-space: pre;
	border-radius: 4px;
	padding: 2px 3px;
	margin: 0px -1px;
}
.panel code, .panel samp, .panel kbd {
	background-color: transparent;
	border-bottom: none;
	border-radius: initial;
	padding: initial;
	margin: initial;
}
.interactive-repl { max-height: 50vh; overflow-y: auto; }
pre.listing .kbd-prompt.line { margin-top: var(--margin-block-vertical); display: flex; align-items: baseline; }
pre.listing .kbd-prompt.line input.kbd {
	flex-grow: 1;
	margin-right: 0;
	padding: 2px;
	border-top-right-radius: 0;
	border-bottom-right-radius: 0;
}
.kbd-prompt.line button.enter-key {
	padding: 1px 4px;
	margin: -5px 0;
}
.kbd-prompt.line button.enter-key::before { content: '\21B5'; }

@keyframes fadeInAndOut {
	0% { opacity: 1; } 50% { opacity: 0; } 100% { opacity: 1; }
}
.interactive-repl .waiting { color: var(--grey-3); animation: fadeInAndOut 1.2s infinite; }

ul.multiple-choice { list-style-type: none; padding-left: 1em; }

.syntax-highlight span.name { color: black; }
.syntax-highlight span.name-def { color: black; }
pre.listing .prompt, .syntax-highlight span.punctuation, .syntax-highlight span.lparen, .syntax-highlight span.rparen, .syntax-highlight span.op, .syntax-highlight span.keyword-op { color: var(--grey-1); }
.syntax-highlight span.keyword { color: var(--blue); }
.syntax-highlight span.string { color: var(--green); }
.syntax-highlight span.number { color: var(--red); }
.syntax-highlight span.keyword-literal { color: var(--red); }
.syntax-highlight span.unmatched-paren, .syntax-highlight span.err { background-color: var(--red); color: white; }
.syntax-highlight span.type-annotation { color: var(--grey-3); }
.syntax-highlight span.comment { color: var(--grey-3); font-style: italic; }
.syntax-highlight a.comment { font-style: italic; }
.syntax-highlight span.decorator { color: var(--purple); font-style: italic; }
.syntax-highlight span.lparen.hover-highlight, .syntax-highlight span.rparen.hover-highlight, .CodeMirror-focused .cm-matchhighlight:not(.cm-keyword):not(.cm-type) {
	background-color: var(--blue-bg);
}
.CodeMirror-matchingbracket { color: var(--grey-1) !important; }
.CodeMirror-focused .CodeMirror-matchingbracket { background-color: var(--blue-bg) !important; }

/* CodeMirror */
.cm-s-default .cm-header, .cm-s-default .cm-quote, .cm-negative, .cm-positive { color: inherit; }

.cm-s-default .cm-keyword { color: var(--blue); }
.cm-s-default .cm-atom, .cm-s-default .cm-number { color: var(--red); }
.cm-s-default .cm-def { color: black; }
.cm-s-default .cm-type { color: var(--blue); }
.cm-s-default .cm-variable, .cm-s-default .cm-variable-2, .cm-s-default .cm-variable-3, .cm-s-default .cm-property, .cm-s-default .cm-qualifier, .cm-s-default .cm-builtin { color: black; }
.cm-s-default pre, .cm-s-default .cm-punctuation, .cm-s-default .cm-operator, .cm-s-default .cm-bracket { color: var(--grey-1); }
.cm-s-default .cm-comment { color: var(--grey-3); font-style: italic; }
.cm-s-default .cm-string, .cm-s-default .cm-string-2 { color: var(--green); }
.cm-s-default .cm-meta { color: var(--purple); font-style: italic; }
.cm-s-default .cm-tag { color: var(--green); }
.cm-s-default .cm-attribute, .cm-s-default .cm-link { color: var(--blue); }
.cm-s-default .cm-hr { color: var(--grey-4); }

.cm-s-default .cm-error, .cm-invalidchar { color: var(--red); }
.cm-tab { width: var(--tab-width); }
/* end CodeMirror */

pre.listing .line { position: relative; margin: 0; }
pre.listing .line[data-line-no]::before {
	position: absolute;
	right: 100%;
	margin-right: 18px;
	display: none;
	white-space: pre;
	content: attr(data-line-no) ':';
	color: var(--grey-5);
	text-align: right;
}
pre.listing:hover .line[data-line-no]::before { display: inline-block; }
@media only print {
	pre.listing .line[data-line-no]::before { display: inline-block; }
}
